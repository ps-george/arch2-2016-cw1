Rnorm,MSG,Instr,s,t,d,h_val,s_val,t_val,ans,exp_err,
0x11,3+7=10,ADD,1,2,3,0,3,7,10,0,
0x11,overflow trap,ADD,1,2,3,0,0x7FFFFFFF,0xFF,0x0,0x2006,
0x11,destination reg is 0,ADD,1,2,0,0,7,3,0,0,
0x11,source same as destination 3+7=10,ADD,1,2,1,0,3,7,10,0,
0x11,-1 + 2 =1,ADD,1,2,3,0,0xFFFFFFFF,2,1,0,
0x11,invalid instruction (shift set),ADD,1,2,3,3,3,7,0x0,0x2005,
0x11,3+7=10,ADDU,1,2,3,0,3,7,10,0,
0x11,-1 + 2 =1,ADDU,1,2,3,0,0xFFFFFFFF,2,1,0,
0x11,source same as destination 3+7=10,ADDU,1,2,1,0,3,7,10,0,
0x11,destination reg is 0,ADDU,1,2,0,0,7,3,0,0,
0x11,invalid instruction (shift set),ADDU,1,2,3,3,3,7,0x0,0x2005,
0x11,7-3=4,SUB,1,2,3,0,7,3,4,0,
0x11,overflow trap,SUB,1,2,3,0,0x7FFFFFFF,0xFFFFFF00,0x0,0x2006,
0x11,destination reg is 0,SUB,1,2,0,0,7,3,0,0,
0x11,source same as destination 7-3=4,SUB,1,2,1,0,7,3,4,0,
0x11,invalid instruction (shift set),SUB,1,2,3,3,7,3,0x0,0x2005,
0x11,7-3=4,SUBU,1,2,3,0,7,3,4,0,
0x11,3-7=-4,SUBU,1,2,3,0,3,7,-4,0,
0x11,destination reg is 0,SUBU,1,2,0,0,7,3,0,0,
0x11,source same as destination 7-3=4,SUBU,1,2,1,0,7,3,4,0,
0x11,invalid instruction (shift set),SUBU,1,2,3,3,7,3,0x0,0x2005,
0x11,0xFFFF00FF & 0x12345678 = 0x12340078,AND,1,2,3,0,0xFFFF00FF,0x12345678,0x12340078,0,
0x11,destination reg is 0,AND,1,2,0,0,0xFFFF00FF,0x12345678,0x0,0,
0x11,source same as destination,AND,1,2,1,0,0xFFFF00FF,0x12345678,0x12340078,0,
0x11,invalid instruction (shift set),AND,1,2,1,3,0xFFFF00FF,0x12345678,0x0,0x2005,
0x11,0x08888888|0x77777770 =0x7FFFFFF8,OR,1,2,3,0,0x08888888,0x77777770,0x7FFFFFF8,0,
0x11,destination reg is 0,OR,1,2,0,0,0x08888888,0x77777770,0x0,0,
0x11,source same as destination,OR,1,2,1,0,0x08888888,0x77777770,0x7FFFFFF8,0,
0x11,invalid instruction (shift set),OR,1,2,3,3,0x08888888,0x77777770,0x0,0x2005,
0x11,0x12345678|0x23456789=0x317131f1,XOR,1,2,3,0,0x12345678,0x23456789,0x317131f1,0,
0x11,destination reg is 0,XOR,1,2,0,0,0x12345678,0x23456789,0x0,0,
0x11,source same as destination,XOR,1,2,1,0,0x12345678,0x23456789,0x317131f1,0,
0x11,invalid instruction (shift set),XOR,1,2,3,3,0x12345678,0x23456789,0x0,0x2005,
0x11,3<7 is true,SLT,1,2,3,0,3,7,1,0,
0x11,7<3 is false,SLT,1,2,3,0,7,3,0,0,
0x11,destination reg is 0,SLT,1,2,0,0,3,7,0,0,
0x11,source same as destinatoin,SLT,1,2,1,0,3,7,1,0,
0x11,invalid instruction (shift set),SLT,1,2,3,3,3,7,0x0,0x2005,
0x11,-1<7 is true,SLT,1,2,3,0,-1,7,1,0,
0x11,3<7 is true,SLTU,1,2,3,0,3,7,1,0,
0x11,7<3 is false,SLTU,1,2,3,0,7,3,0,0,
0x11,destination reg is 0,SLTU,1,2,0,0,3,7,0,0,
0x11,source same as destinatoin,SLTU,1,2,1,0,3,7,1,0,
0x11,invalid instruction (shift set),SLTU,1,2,3,3,3,7,0x0,0x2005,
0x11,-1<7 is false,SLTU,1,2,3,0,-1,7,0,0,
0x11,2<<2=8,SLL,0,2,3,2,0,2,8,0,
0x11,shift top two bits off the end,SLL,0,2,3,2,0,0xFFFFFFFF,0xFFFFFFFc,0,
0x11,source same as dest,SLL,0,1,1,2,0,3,0xc,0,
0x11,destination reg is 0,SLL,0,2,0,2,0,2,0,0,
0x11,invalid instruction (source 1 set),SLL,3,2,3,2,0,2,0x0,0x2005,
0x11,8>>2=2,SRL,0,2,3,2,0,8,2,0,
0x11,shift bottom two bits off the end,SRL,0,2,3,2,0,7,0x1,0,
0x11,source same as dest,SRL,0,1,1,2,0,8,0x2,0,
0x11,destination reg is 0,SRL,0,2,0,2,0,7,0,0,
0x11,invalid instruction (source 1 set),SRL,3,2,3,2,0,2,0x0,0x2005,
0x11,8>>2=2,SRA,0,2,3,2,0,8,2,0,
0x11,shift bottom two bits off the end,SRA,0,2,3,2,0,7,0x1,0,
0x11,source same as dest,SRA,0,1,1,2,0,8,0x2,0,
0x11,destination reg is 0,SRA,0,2,0,2,0,7,0,0,
0x11,invalid instruction (source 1 set),SRA,3,2,3,2,0,2,0x0,0x2005,
0x11,0x80000000>>2=0xe0000000 (sign-extend),SRA,0,2,3,2,0,0x80000000,0xe0000000,0,
0x11,1<<2=4,SLLV,1,2,3,0,2,1,4,0,
0x11,3<<30=0x80000000 (shift off end),SLLV,1,2,3,0,31,3,0x80000000,0,
0x11,source same as dest,SLLV,1,2,2,0,2,1,4,0,
0x11,destination reg is 0,SLLV,1,2,0,0,28,1,0,0,
0x11,invalid instruction (shift set),SLLV,1,2,3,4,2,1,0x0,0x2005,
0x11,2>>1=1,SRLV,1,2,3,0,1,2,1,0,
0x11,3>>1=1 (shift off end),SRLV,1,2,3,0,1,3,1,0,
0x11,source same as dest,SRLV,1,2,2,0,1,2,1,0,
0x11,destination reg is 0,SRLV,1,2,0,0,28,1,0,0,
0x11,invalid instruction (shift set),SRLV,1,2,3,4,2,1,0x0,0x2005,
0x11,2>>1=1,SRAV,1,2,3,0,1,2,1,0,
0x11,3>>1=1 (shift off end),SRAV,1,2,3,0,1,3,1,0,
0x11,source same as dest,SRAV,1,2,2,0,1,2,1,0,
0x11,destination reg is 0,SRAV,1,2,0,0,28,1,0,,
0x11,invalid instruction (shift set),SRAV,1,2,3,4,2,1,0x0,0x2005,
0x11,0x80000000>>2=0xe0000000 (sign-extend),SRAV,1,2,3,0,2,0x80000000,0xe0000000,0,
Rmtmf,message,Instr,s_reg,t_reg,d,h val,s_val,err_exp,,,
0x15,move to hi,MTHI,1,0,0,0,5,0,,,
0x15,invalid instruction (t set),MTHI,0,1,0,0,0,0x2005,,,
0x15,invalid instruction (d set),MTHI,0,0,1,0,0,0x2005,,,
0x15,invalid instruction (shift set),MTHI,0,0,0,1,0,0x2005,,,
0x15,move to lo,MTLO,1,0,0,0,5,0,,,
0x15,invalid instruction (t set),MTLO,0,1,0,0,0,0x2005,,,
0x15,invalid instruction (d set),MTLO,0,0,1,0,0,0x2005,,,
0x15,invalid instruction (shift set),MTLO,0,0,0,1,0,0x2005,,,
Rmdiv,MSG – needs redoing,Instr,s reg,t_reg,d_reg,h val,s val,t val,hi,lo,err_exp
0x16,3*5=15,MULT,1,2,0,0,3,5,0,15,0
0x16,-3*5=-15 (sign extend),MULT,1,2,0,0,0xFFFFFFFD,5,0xFFFFFFFF,0xFFFFFFF1,0
0x16,same reg src,MULT,1,1,0,0,3,3,0,9,0
0x16,overflow into 64 bit num,MULT,1,2,0,0,0xFFFF,0xEFFFF,0xE,0xFFF00001,0
0x16,invalid instruction (shift/dest set),MULT,1,2,5,2,0xFFFF,0xEFFFF,0,0,0x2005
0x16,3*5=15,MULTU,1,2,0,0,3,5,0,15,0
0x16,-3*5=15 (no sign extend),MULTU,1,2,0,0,0xFFFFFFFD,0x5,0x4,0xFFFFFFF1,0
0x16,same reg src,MULTU,1,1,0,0,3,3,0,9,0
0x16,overflow into 64 bit num,MULTU,1,2,0,0,0xFFFF,0xEFFFF,0xE,0xFFF00001,0
0x16,invalid instruction (shift/dest set),MULTU,1,2,5,2,0xFFFF,0xEFFFF,0,0,0x2005
0x16,15/5=3 no remainder,DIV,1,2,0,0,15,5,0,3,0
0x16,15/4=3 remainder 3,DIV,1,2,0,0,15,4,3,3,0
0x16,-15/5=-3 no remainder,DIV,1,2,0,0,-15,5,0,-3,0
0x16,same reg src,DIV,1,1,0,0,5,5,0x0,1,0
0x16,-15/4=-3 remainder,DIV,1,2,0,0,-15,4,-3,-3,0
0x16,invalid instruction (shift/dest set),DIV,1,2,5,2,0xFFFF,0xEFFFF,0,0,0x2005
0x16,15/5=3 no remainder,DIVU,1,2,0,0,15,5,0,3,0
0x16,15/4=3 remainder 3,DIVU,1,2,0,0,15,4,3,3,0
0x16,-15/4= 3FFFFFFC remainder 1 (unsigned interpretation of -15),DIVU,1,2,0,0,-15,4,1,0x3FFFFFFC,0
0x16,same reg src,DIVU,1,1,0,0,5,5,0x0,1,0
0x16,same reg src neg,DIVU,1,1,0,0,-1,-1,0,1,0
0x16,invalid instruction (shift/dest set),DIVU,1,2,5,2,0xFFFF,0xEFFFF,0,0,0x2005
Inorm,message,Instr,s_reg,t_reg,i_val,s_val,ans,exp_err,,,
0x41,3+7=10,ADDI,1,2,7,3,10,0,,,
0x41,overflow trap,ADDI,1,2,0xFF,0x7FFFFFFF,0x0,0x2006,,,
0x41,destination reg is 0,ADDI,1,0,3,7,0,0,,,
0x41,source same as destination 3+7=10,ADDI,1,2,7,3,10,0,,,
0x41,-1 + 2 =1,ADDI,1,2,2,0xFFFFFFFF,1,0,,,
0x41,3+7=10,ADDIU,1,2,7,3,10,0,,,
0x41,-1 + 2 =1,ADDIU,1,2,2,0xFFFFFFFF,1,0,,,
0x41,source same as destination 3+7=10,ADDIU,1,2,7,3,10,0,,,
0x41,destination reg is 0,ADDIU,1,0,3,7,0,0,,,
0x41,2<1 set reg t to 0,SLTI,1,2,1,2,0,0,,,
0x41,1<2 set reg t to 1,SLTI,1,2,2,1,1,0,,,
0x41,-1<2 set reg t to 1,SLTI,1,2,2,-1,1,0,,,
0x41,destination reg is 0,SLTI,1,0,2,1,0,0,,,
0x41,2<1 set reg t to 0,SLTIU,1,2,1,2,0,0,,,
0x41,1<2 set reg t to 1,SLTIU,1,2,2,1,1,0,,,
0x41,-1<2 (but unsigned) set reg t to 0,SLTIU,1,2,2,-1,0,0,,,
0x41,0xFFFF641e< 0xFF08 (unsigned) set reg t to 1,SLTIU,1,2,0xFF08,0xFFFF641e,1,0,,,
0x41,destination reg is 0,SLTIU,1,0,2,1,0,0,,,
0x41,0x00FF & 0x00005678 = 0x00000078,ANDI,1,2,0x000000FF,0x00005678,0x0000078,0,,,
0x41,destination reg is 0,ANDI,1,0,0xFFFF00FF,0x12345678,0x0,0,,,
0x41,0x00008888|0x77777770 =0x7777FFF8,ORI,1,2,0x8888,0x77777770,0x7777FFF8,0,,,
0x41,destination reg is 0,ORI,1,0,0x8888,0x77777770,0x0,0,,,
0x41,0x5678|0x23456789=0x2345ef01,XORI,1,2,0x5678,0x23456789,0x234531f1,0,,,
0x41,destination reg is 0,XORI,1,0,0x5678,0x23456789,0x0,0,,,
0x41,load 0x5678 to upper bits,LUI,1,2,0x5678,0x23456789,0x56780000,0,,,
0x41,destination reg is 0,LUI,1,0,0x5678,0x23456789,0,0,,,
Rbranch,message,Instr,s_reg,t_reg,d_reg,h_val,s_val,link,exp_err,,
0x12,normal branch to 0xc memory location,JR,2,0,0,0,0xc,0,0,,
0x12,failed misaligned branch to 0xF,JR,2,0,0,0,0xF,0,0x2003,,
0x12,linked branch to 0xc,JALR,2,0,30,0,0xc,1,0,,
0x12,failed misaligned linked branch to 0xF,JALR,2,0,30,0,0xF,1,0x2003,,
Jbranch,message,instr,j_val,link,exp_err,,,,,,
0x32,normal jump to 0xc,J,0x3,0,0,,,,,,
0x32,jump and link to 0xc,JAL,0x3,1,0,,,,,,
0x32,jump outside range of memory,J,0x2000,0,0x2002,,,,,,
Ibranch,message,instr,s_reg,t_reg,i_val,s_val,t_val,loc,branch,exp_err,
0x42,normal branch to +0xc,BEQ,2,3,0x3,5,5,0xc,1,0,
0x42,don’t take branch to +0xc,BEQ,2,3,0x3,4,5,0xc,0,0,
0x42,failed branch to memory address -4,BEQ,2,3,0xFFFE,5,5,0,1,0x2002,
0x42,normal branch to +0xc,BNE,2,3,0x3,4,5,0xc,1,0,
0x42,don’t take branch to +0xc,BNE,2,3,0x3,5,5,0xc,0,0,
0x42,failed branch to memory address -4,BNE,2,3,0xFFFE,4,5,0,1,0x2002,
0x42,s==0 normal branch to +0xc,BLEZ,2,0,0x3,0,0,0xc,1,0,
0x42,s<0 normal branch to +0xc,BLEZ,2,0,0x3,0xFFFFFFFF,0,0xc,1,0,
0x42,don’t take branch to +0xc,BLEZ,2,0,0x3,5,0,0xc,0,0,
0x42,failed branch to memory address -4,BLEZ,2,0,0xFFFE,0,0,0,1,0x2002,
0x42,normal branch to +0xc,BGTZ,2,0,0x3,4,0,0xc,1,0,
0x42,s==0 don’t take branch to +0xc,BGTZ,2,0,0x3,0,0,0xc,0,0,
0x42,s<0 don’t take branch to +0xc,BGTZ,2,0,0x3,0xFFFFFFFF,0,0xc,0,0,
0x42,failed branch to memory address -4,BGTZ,2,0,0xFFFE,5,0,0,1,0x2002,
,,,,,,,,,,,
Rtbranch,message,instr,s_reg,x,i_val,s_val,link,loc,branch,exp_err,
0x22,normal branch to +0xc,BLTZ,2,x,0x3,0xFFFFFFFF,0,0xc,1,0,
0x22,don’t take branch to +0xc,BLTZ,2,x,0x3,0x77777770,0,0xc,0,0,
0x22,failed branch to memory address -4,BLTZ,2,x,0xFFFE,0xFFFFFFFF,0,0,1,0x2002,
0x22,normal branch to +0xc,BLTZAL,2,x,0x3,0xFFFFFFFF,1,0xc,1,0,
0x22,don’t take branch to +0xc,BLTZAL,2,x,0x3,0x77777770,1,0xc,0,0,
0x22,failed branch to memory address -4,BLTZAL,2,x,0xFFFE,0xFFFFFFFF,1,0,1,0x2002,
0x22,normal branch to +0xc,BGEZ,2,x,0x3,0,0,0xc,1,0,
0x22,normal branch to +0xc,BGEZ,2,x,0x3,0x1,0,0xc,1,0,
0x22,don’t take branch to +0xc,BGEZ,2,x,0x3,0xFFFFFFFF,0,0xc,0,0,
0x22,failed branch to memory address -4,BGEZ,2,x,0xFFFE,0x1,0,0,1,0x2002,
0x22,normal branch to +0xc,BGEZAL,2,x,0x3,0,1,0xc,1,0,
0x22,normal branch to +0xc,BGEZAL,2,x,0x3,0x1,1,0xc,1,0,
0x22,don’t take branch to +0xc,BGEZAL,2,x,0x3,0xFFFFFFFF,1,0xc,0,0,
0x22,failed branch to memory address -4,BGEZAL,2,x,0xFFFE,0,1,0,1,0x2002,
,,,,,,,,,,,
Imemread,Message,Instr,s,t,i_val,s_val,t_val,bytes,memloc,ans,exp_err
0x44,read from aligned memory location,LW,1,2,0xc,0x1000,1,0x12345678,0x100c,0x12345678,0
0x44,read from un-aligned memory location,LW,1,2,0x1,0x1000,1,0x12345678,0x1001,0,0x2003
0x44,read to destination register = 0,LW,1,0,0xc,0x1000,1,0x12345678,0x100c,0,0
0x44,read from aligned memory subtraction,LW,1,2,0xFFF8,0x1000,1,0x12345678,0xFF8,0x12345678,0
0x44,read from negative memory location,LW,1,2,0xFFF8,0x0,1,0x0,0x1000,0,0x2002
,,,,,,,,,,,
0x44,read from aligned memory location,LH,1,2,0xc,0x1000,1,0x12345678,0x100c,0x1234,0
0x44,read from aligned memory location sign extend,LH,1,2,0xc,0x1000,1,0x87651234,0x100c,0xFFFF8765,0
0x44,read from un-aligned memory location,LH,1,2,0x1,0x1000,1,0x12345678,0x1001,0,0x2003
0x44,read to destination register = 0,LH,1,0,0xc,0x1000,1,0x12345678,0x100c,0,0
0x44,read from aligned memory subtraction,LH,1,2,0xFFF8,0x1000,1,0x12345678,0xFF8,0x1234,0
0x44,read from negative memory location,LH,1,2,0xFFF8,0,1,0,0x1000,0,0x2002
0x44,read from aligned memory location,LHU,1,2,0xc,0x1000,1,0x12345678,0x100c,0x1234,0
0x44,read from aligned memory location – no sign extend,LHU,1,2,0xc,0x1000,1,0x87651234,0x100c,0x8765,0
0x44,read from un-aligned memory location,LHU,1,2,0x1,0x1000,1,0x12345678,0x1001,0,0x2003
0x44,read to destination register = 0,LHU,1,0,0xc,0x1000,1,0x12345678,0x100c,0,0
0x44,read from aligned memory subtraction,LHU,1,2,0xFFF8,0x1000,1,0x12345678,0xFF8,0x1234,0
0x44,read from negative memory location,LHU,1,2,0xFFF8,0,1,0,0x1000,0,0x2002
,,,,,,,,,,,
0x44,read from aligned memory location,LB,1,2,0xc,0x1000,1,0x12345678,0x100c,0x12,0
0x44,read from un-aligned memory location,LB,1,2,0x3,0x1000,1,0x12345678,0x1000,0x78,0
0x44,read from negative memory location,LB,1,2,0xFFF8,0x0,1,0,0x1000,0,0x2002
0x44,read to destination register = 0 ,LB,1,0,0xc,0x1000,1,0x12345678,0x100c,0,0
0x44,read from memory via subtraction,LB,1,2,0xFFF8,0x1000,1,0x12345678,0xFF8,0x12,0
0x44,read from memory location sign extend,LB,1,2,0xc,0x1000,1,0x87651234,0x100c,0xFFFFFF87,0
0x44,read from aligned memory location,LBU,1,2,0xc,0x1000,1,0x12345678,0x100c,0x12,0
0x44,read from un-aligned memory location,LBU,1,2,0x3,0x1000,1,0x12345678,0x1000,0x78,0
0x44,read from negative memory location,LBU,1,2,0xFFF8,0x0,1,0,0x1000,0,0x2002
0x44,read to destination register = 0 ,LBU,1,0,0xc,0x1000,1,0x12345678,0x100c,0,0
0x44,read from memory via subtraction,LBU,1,2,0xFFF8,0x1000,1,0x12345678,0xFF8,0x12,0
0x44,read from memory location – no sign extend,LBU,1,2,0xc,0x1000,1,0x87651234,0x100c,0x87,0
,,,,,,,,,,,
0x44,read from aligned memory location,LWL,1,2,0xc,0x1000,0x12345678,0x98765432,0x100c,0x98765678,0
0x44,read from un-aligned memory location,LWL,1,2,0x1,0x1000,0x12345678,0x98765432,0x1000,0x76545678,0
0x44 ,read to destination register = 0,LWL,1,0,0x1,0x1000,0x12345678,0x98765432,0x1000,0,0
0x44,read from negative memory location,LWL,1,2,0xFFF8,0x0,0x12345678,0,0,0,0x2002
0x44,read from unaligned memory subtraction,LWL,1,2,0xFFF8,0x1001,0x12345678,0x98765432,0xFF9,0x98765678,0
0x44,read from aligned memory location,LWR,1,2,0xc,0x1000,0x12345678,0x98765432,0x100c,0x12345432,0
0x44,read from un-aligned memory location,LWR,1,2,0x1,0x1000,0x12345678,0x98765432,0x1001,0x12345432,0
0x44 ,read to destination register = 0,LWR,1,0,0x1,0x1000,0x12345678,0x98765432,0x1000,0,0
0x44,read from negative memory location,LWR,1,2,0xFFF8,0x0,0x12345678,0,0,0,0x2002
0x44,read from unaligned memory subtraction,LWR,1,2,0xFFF8,0x1001,0x12345678,0x98765432,0xFF9,0x12345432,0
,,,,,,,,,,,
,,,,,,,,,,,
Imemwrite,msg,instr,s,t,i_val,s_val,t_val,memloc,ans,exp_err,
0x43,store byte aligned address,SB,1,2,0xc,0x1000,0x12345678,0x100c,0x78000000,0,
0x43,store byte unaligned address,SB,1,2,0xf,0x1000,0x12345678,0x100c,0x00000078,0,
0x43,store byte negative address,SB,1,2,0xFFF8,0x0,0x12345678,0,0,0x2002,
,,,,,,,,,,,
0x43,store half word aligned-2 address,SH,1,2,0x2,0x1000,0x12345678,0x1000,0x00005678,0,
0x43,store half word aligned address,SH,1,2,0xc,0x1000,0x12345678,0x100c,0x56780000,0,
0x43,store half word negative address,SH,1,2,0xFFF8,0,0x12345678,0,0,0x2002,
0x43,store half word unaligned address,SH,1,2,0xf,0x1000,0x12345678,0x100c,0,0x2003,
,,,,,,,,,,,
0x43,store word aligned address,SW,1,2,0xc,0x1000,0x12345678,0x100c,0x12345678,0,
0x43,store word unaligned address,SW,1,2,0xf,0x1000,0x12345678,0,0,0x2003,
0x43,store word negative address,SW,1,2,0xFFF8,0,0x12345678,0,0,0x2002,
,,,,,,,,,,,
STOP,,,,,,,,,,,
